version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@5.0.0
  aws-cli: circleci/aws-cli@2.0
  aws-s3: circleci/aws-s3@3.0
  # aws-elastic-beanstalk: circleci/aws-elastic-beanstalk@2.0.1
  eb: circleci/aws-elastic-beanstalk@1.0.0
  # different jobs are calles later in the workflows sections

jobs:
   install and test:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/base:stable"

    steps:
      - node/install
      - checkout
      - run:
          name: Install DevDependencies
          command: |
            npm run dependencies:install
      - run:
          name: Frontend Install
          command: |
            npm run frontend:install
      - run:
          name: Backend Install
          command: |
            npm run backend:install
      - run:
          name: Frontend Test
          command: |
            npm run frontend:test
      - run:
          name: Backend Test
          command: |
            npm run backend:test
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/base:stable"
      # - image: cimg/node:16.13.2
    steps:
      - node/install
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - eb/setup

      # install dependencies in both apps

      - run:
          name: Frontend Build
          command: |
            npm run frontend:build
      - run:
          name: Backend Build
          command: |
            npm run backend:build

  deploy:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/base:stable"
      # - image: cimg/node:16.13.2
    steps:
      - node/install
      - checkout

      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - eb/setup
      - run:
          name: Frontend Deploy
          command: |
            npm run frontend:deploy
      - run:
          name: Backend Deploy
          command: |
            npm run backend:deploy

workflows:
  version: 2
  udagram-pipeline:
    jobs:
      - install and test
      - build:
          requires:
            - install and test
      - deploy:
          requires:
            - build
